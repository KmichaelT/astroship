---
import { getCollection } from "astro:content";
import ProjectLayout from "@layouts/ProjectLayout.astro";
import { Icon } from "astro-icon/components";

export async function getStaticPaths() {
  const projectEntries = await getCollection("project");
  return projectEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<ProjectLayout title={entry.data.title} project={entry}>
  <div class="space-y-8">
    <!-- Project Overview Section -->
    <div class="bg-white rounded-xl p-6 md:p-8 shadow-sm border border-gray-100">
      <h2 class="text-xl font-semibold text-gray-900 mb-4">Project Overview</h2>
      <div class="prose prose-blue max-w-none">
        <p class="text-gray-600 leading-relaxed">{entry.data.snippet}</p>
      </div>
    </div>

    <!-- Skills Section -->
    <div class="bg-white rounded-xl p-6 md:p-8 shadow-sm border border-gray-100">
      <h3 class="text-lg font-semibold mb-6 flex items-center gap-2 text-gray-900">
        <Icon name="bx:brain" class="w-5 h-5 text-purple-500"/>
        Required Skills & Expertise
      </h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* Software Skills */}
        <div>
          <h4 class="text-md font-medium mb-3 text-gray-900 flex items-center gap-2">
            <Icon name="bx:code-curly" class="w-4 h-4 text-blue-500"/>
            Software Development
          </h4>
          <ul class="space-y-2">
            {entry.data.skillDetails.software.map((item) => (
              <li class="flex items-start gap-1">
                <span class="bg-blue-100 px-2 py-0.5 rounded-full text-sm font-medium text-blue-600 mt-1 shrink-0">
                  <Icon name="bx:code" class="w-3 h-3"/>
                </span>
                <span class="text-gray-600 leading-relaxed">{item}</span>
              </li>
            ))}
          </ul>
        </div>

        {/* Hardware Skills */}
        <div>
          <h4 class="text-md font-medium mb-3 text-gray-900 flex items-center gap-2">
            <Icon name="bx:chip" class="w-4 h-4 text-green-500"/>
            Hardware
          </h4>
          <ul class="space-y-2">
            {entry.data.skillDetails.hardware.map((item) => (
              <li class="flex items-start gap-1">
                <span class="bg-green-100 px-2 py-0.5 rounded-full text-sm font-medium text-green-600 mt-1 shrink-0">
                  <Icon name="bx:microchip" class="w-3 h-3"/>
                </span>
                <span class="text-gray-600 leading-relaxed">{item}</span>
              </li>
            ))}
          </ul>
        </div>

        {/* Design Skills */}
        <div>
          <h4 class="text-md font-medium mb-3 text-gray-900 flex items-center gap-2">
            <Icon name="bx:palette" class="w-4 h-4 text-yellow-500"/>
            Design
          </h4>
          <ul class="space-y-2">
            {entry.data.skillDetails.design.map((item) => (
              <li class="flex items-start gap-1">
                <span class="bg-yellow-100 px-2 py-0.5 rounded-full text-sm font-medium text-yellow-600 mt-1 shrink-0">
                  <Icon name="bx:brush" class="w-3 h-3"/>
                </span>
                <span class="text-gray-600 leading-relaxed">{item}</span>
              </li>
            ))}
          </ul>
        </div>

        {/* Other Skills */}
        <div>
          <h4 class="text-md font-medium mb-3 text-gray-900 flex items-center gap-2">
            <Icon name="bx:plus-circle" class="w-4 h-4 text-red-500"/>
            Other Requirements
          </h4>
          <ul class="space-y-2">
            {entry.data.skillDetails.other.map((item) => (
              <li class="flex items-start gap-1">
                <span class="bg-red-100 px-2 py-0.5 rounded-full text-sm font-medium text-red-600 mt-1 shrink-0">
                  <Icon name="bx:star" class="w-3 h-3"/>
                </span>
                <span class="text-gray-600 leading-relaxed">{item}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>

    <!-- Detailed Content -->
    <div class="prose prose-lg max-w-none prose-headings:text-gray-900 prose-p:text-gray-600">
      <Content />
    </div>
  </div>
</ProjectLayout>