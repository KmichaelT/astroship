---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import { Icon } from "astro-icon/components";

// Get all scholarship entries and filter out drafts
const publishedScholarshipEntries = await getCollection("scholarship", (entry) => {
  return !entry.data.draft;
});

// Sort content entries by publishDate
publishedScholarshipEntries.sort((a, b) => {
  return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
});

// Format amount for display
const formatAmount = (amount) => {
  if (amount.type === 'fixed') {
    return amount.value;
  }
  return 'Varies';
};

// Format date for display
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    month: 'short',
    day: 'numeric',
    year: 'numeric'
  }).format(date);
};
---

<Layout title="Available Scholarships">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Available Scholarships</Fragment>
      <Fragment slot="desc">
        Explore our current scholarship opportunities and find the support you need for your education.
      </Fragment>
    </Sectionhead>

    <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 mt-16 mx-auto max-w-6xl">
      {publishedScholarshipEntries.map((scholarshipEntry) => (
        <div class="relative flex flex-col rounded-lg bg-white px-6 py-5 border border-gray-200 hover:border-blue-200 transition-colors">
          <div class="min-w-0 flex-1">
            <a href={`/scholarship/${scholarshipEntry.slug}`} class="focus:outline-none">
              <span class="absolute inset-0" aria-hidden="true"></span>
              
              {/* Title and Description */}
              <h3 class="text-lg font-medium text-blue-600 mb-2">
                {scholarshipEntry.data.title}
              </h3>
              <p class="text-sm text-gray-600 mb-4 line-clamp-2">
                {scholarshipEntry.data.snippet}
              </p>

              {/* Award and Deadline */}
              <div class="flex flex-wrap gap-6  ">
                <div class="flex items-center gap-2">
                  <Icon name="bx:dollar" class="w-5 h-5 text-green-600" />
                  <div>
                    <span class="text-gray-500 text-sm">Award:</span>
                    <span class="font-medium text-gray-900 ml-1">{formatAmount(scholarshipEntry.data.awardAmount)}</span>
                  </div>
                </div>
                {scholarshipEntry.data.applicationDeadline && (
                  <div class="flex items-center gap-2">
                    <Icon name="bx:calendar" class="w-5 h-5 text-red-600" />
                    <div>
                      <span class="text-gray-500 text-sm">Deadline:</span>
                      <span class="font-medium text-gray-900 ml-1">
                        {formatDate(new Date(scholarshipEntry.data.applicationDeadline))}
                      </span>
                    </div>
                  </div>
                )}
              </div>
            </a>
          </div>
        </div>
      ))}
    </div>
  </Container>
</Layout>