---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import { Icon } from "astro-icon/components";
import { getFormattedDate } from "@utils/all";

export async function getStaticPaths() {
  const scholarshipEntries = await getCollection("scholarship");
  return scholarshipEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Calculate days remaining
const daysRemaining = Math.ceil(
  (new Date(entry.data.deadline).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24)
);
---

<Layout title={entry.data.title}>
  <Container>
    <div class="mx-auto max-w-4xl mt-14">
      <!-- Hero Section -->
      <div class="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-8 mb-8">
        <div class="flex flex-wrap gap-3 mb-4">
          <span class="bg-blue-500 text-white rounded-full px-4 py-1 text-sm font-medium">
            {entry.data.category}
          </span>
          <span class="bg-emerald-500 text-white rounded-full px-4 py-1 text-sm font-medium">
            {entry.data.fundingType} Funding
          </span>
        </div>

        <h1 class="text-4xl lg:text-5xl font-bold lg:leading-tight text-gray-900">
          {entry.data.title}
        </h1>

        <p class="mt-4 text-lg text-gray-600 max-w-2xl">
          {entry.data.provider} is offering this scholarship to support {entry.data.level.join(" & ")} students.
        </p>
      </div>

      <!-- Key Information Cards -->
      <div class="grid md:grid-cols-3 gap-6 mb-12">
        <!-- Amount Card -->
        <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100 hover:border-blue-200 transition-all">
          <div class="flex items-center gap-4">
            <div class="bg-blue-100 p-3 rounded-lg">
              <Icon name="bx:dollar" class="w-6 h-6 text-blue-600"/>
            </div>
            <div>
              <p class="text-sm text-gray-500">Amount</p>
              <p class="text-xl font-bold text-gray-900">{entry.data.amount}</p>
            </div>
          </div>
        </div>

        <!-- Deadline Card -->
        <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100 hover:border-blue-200 transition-all">
          <div class="flex items-center gap-4">
            <div class="bg-red-100 p-3 rounded-lg">
              <Icon name="bx:calendar" class="w-6 h-6 text-red-600"/>
            </div>
            <div>
              <p class="text-sm text-gray-500">Deadline</p>
              <p class="text-xl font-bold text-gray-900">{getFormattedDate(entry.data.deadline)}</p>
              {daysRemaining > 0 && 
                <p class="text-sm text-red-600 mt-1">{daysRemaining} days remaining</p>
              }
            </div>
          </div>
        </div>

        <!-- Duration Card -->
        <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100 hover:border-blue-200 transition-all">
          <div class="flex items-center gap-4">
            <div class="bg-purple-100 p-3 rounded-lg">
              <Icon name="bx:time" class="w-6 h-6 text-purple-600"/>
            </div>
            <div>
              <p class="text-sm text-gray-500">Duration</p>
              <p class="text-xl font-bold text-gray-900">{entry.data.duration}</p>
              <p class="text-sm text-gray-600 mt-1">
                {entry.data.renewable ? "Renewable" : "Non-renewable"}
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Academic Levels -->
      <div class="mb-8">
        <h3 class="text-sm uppercase text-gray-500 font-medium mb-3">Available For</h3>
        <div class="flex flex-wrap gap-2">
          {entry.data.level.map((level) => (
            <span class="bg-indigo-50 text-indigo-600 text-sm rounded-full px-4 py-2 font-medium">
              {level.charAt(0).toUpperCase() + level.slice(1)}
            </span>
          ))}
        </div>
      </div>

      <!-- Requirements & Eligibility Grid -->
      <div class="grid md:grid-cols-2 gap-6 mb-12">
        <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
          <h3 class="text-lg font-semibold mb-4 flex items-center gap-2">
            <Icon name="bx:check-circle" class="w-5 h-5 text-green-500"/>
            Eligibility
          </h3>
          <ul class="space-y-3">
            {entry.data.eligibility.map((item) => (
              <li class="flex items-start gap-3">
                <span class="bg-green-100 p-1 rounded-full mt-1">
                  <Icon name="bx:check" class="w-3 h-3 text-green-600"/>
                </span>
                <span class="text-gray-600">{item}</span>
              </li>
            ))}
          </ul>
        </div>

        <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
          <h3 class="text-lg font-semibold mb-4 flex items-center gap-2">
            <Icon name="bx:file" class="w-5 h-5 text-blue-500"/>
            Requirements
          </h3>
          <ul class="space-y-3">
            {entry.data.requirements.map((item) => (
              <li class="flex items-start gap-3">
                <span class="bg-blue-100 p-1 rounded-full mt-1">
                  <Icon name="bx:right-arrow" class="w-3 h-3 text-blue-600"/>
                </span>
                <span class="text-gray-600">{item}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>

      <!-- Tags -->
      <div class="mb-12">
        <h3 class="text-sm uppercase text-gray-500 font-medium mb-3">Related Topics</h3>
        <div class="flex flex-wrap gap-2">
          {entry.data.tags.map((tag) => (
            <span class="bg-gray-100 text-gray-600 rounded-full px-4 py-2 text-sm hover:bg-gray-200 transition-colors cursor-pointer">
              #{tag}
            </span>
          ))}
        </div>
      </div>

      <!-- Contact Card -->
      <div class="bg-gradient-to-br from-gray-50 to-gray-100 rounded-xl p-6 mb-12">
        <h3 class="text-lg font-semibold mb-4">Contact Information</h3>
        <div class="grid sm:grid-cols-3 gap-6">
          <a 
            href={`mailto:${entry.data.contact.email}`}
            class="flex items-center gap-3 text-gray-600 hover:text-blue-600 transition-colors">
            <Icon name="bx:envelope" class="w-5 h-5"/>
            <span class="text-sm">{entry.data.contact.email}</span>
          </a>
          {entry.data.contact.phone && (
            <a 
              href={`tel:${entry.data.contact.phone}`}
              class="flex items-center gap-3 text-gray-600 hover:text-blue-600 transition-colors">
              <Icon name="bx:phone" class="w-5 h-5"/>
              <span class="text-sm">{entry.data.contact.phone}</span>
            </a>
          )}
          <a 
            href={entry.data.contact.website}
            target="_blank"
            class="flex items-center gap-3 text-gray-600 hover:text-blue-600 transition-colors">
            <Icon name="bx:link" class="w-5 h-5"/>
            <span class="text-sm">Visit Website</span>
          </a>
        </div>
      </div>

      <!-- Main Content -->
      <div class="prose prose-lg max-w-3xl mx-auto mb-12">
        <Content />
      </div>

      <!-- Action Buttons -->
      <div class="flex flex-wrap gap-4 justify-center">
        <a
          href={entry.data.contact.website}
          target="_blank"
          class="bg-blue-600 text-white px-8 py-3 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center gap-2">
          <Icon name="bx:paper-plane" class="w-5 h-5"/>
          Apply Now
        </a>
        <a
          href="/scholarship"
          class="bg-gray-100 text-gray-600 px-8 py-3 rounded-lg hover:bg-gray-200 transition-colors inline-flex items-center gap-2">
          <Icon name="bx:arrow-back" class="w-5 h-5"/>
          Back to Scholarships
        </a>
      </div>
    </div>
  </Container>
</Layout>